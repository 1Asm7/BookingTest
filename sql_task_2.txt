Модифицируем таблицы.
Конечный вид:


1. Таблица order_tickets
Билеты из конкретного заказа и их количество:

order_tickets
--------------------------------------------------
id      | order_id     | ticket_id     | barcode
--------|--------------|---------------|----------
1       | (order_id)   | (ticket_id)   | (barcode)

- id - int(10) - инкрементальный порядковый номер.
- order_id - int(10) - ид заказа из таблицы orders.
- ticket_id - int(10) - ид типа билета из таблицы tickets.
- barcode - varchar(120) - уникальный штрих код заказа.


2. Таблица tickets
В эту таблицу добавляем все возможные типы билетов.

tickets
----------------------------
id      | name     | price
--------|----------|--------
1       | (name)   | (price)

- id - int(10) - инкрементальный порядковый номер.
- name - varchar(30) - название типа билета (взрослый, детский, льготный, групповой и прочие).
- price - int(11) - цена этого типа билета.


3. Таблица orders
Основная таблица с остальной информацией о заказе:

orders
---------------------------------------------------------------------
id      | event_id     | event_date     | equal_price     | created
--------|--------------|----------------|-----------------|----------
1       | (event_id)   | (event_date)   | (equal_price)   | (created)

- id - int(10) - инкрементальный порядковый номер заказа
- event_id - int(11) - уникальный ид события. У каждого события есть свое название, описание, расписание, цены и свой уникальный event_id соответственно
- event_date - varchar(10) - дата и время на которое были куплены билеты
- equal_price - int(11) - общая сумма заказа
- created - datetime - дата создания заказа


Пояснение данного решения:
С учетом уникального баркода у каждого билета, таблицы нужно модифицировать, убрав столбец `barcode` из таблицы `orders` и добавив его вместо `quantity` в `order_tickets`. Столбец `quantity` уже не имеет значения, так как билет с определенным баркодом может быть только один.
